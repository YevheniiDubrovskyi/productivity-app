{"version":3,"sources":["webpack:///webpack/bootstrap aa7321c6d0c8b3e98916","webpack:///./src/app.js","webpack:///./src/router.js","webpack:///./src/utils/eventbus.js"],"names":["viewport","document","querySelector","router","controller","url","Router","routes","events","EventBus","Object","create","eventPath","callback","context","parsedPath","parseEventPath","namespace","key","callbackObject","namespaceCallbacks","Error","common","keys","push","deleteCallback","callbackArray","callbackIndex","forEach","index","splice","parsedEventPath","keyCallbacks","getNamespaceCallbacks","getKeyCallbacks","length","data","fireCallbacksArray","callbacksArray","event","setTimeout","bind","splitPath","trim","split"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap aa7321c6d0c8b3e98916","import Router from './router.js';\n\nconst viewport = document.querySelector('.main');\n\nconst router = new Router(viewport,\n  {\n    controller: './pages/reports.controller',\n    url: '/reports'\n  },\n  {\n    controller: './pages/settings_pom.controller',\n    url: '/settings_pom'\n  }\n);\n\n// let thisObj = {\n//   test: 'This is this object',\n//   method: function(...data) {\n//     console.log(this.test, data);\n//   }\n// };\n\n// router.events.on('model', (...data) => {\n//   console.log('Model event, data: ', data);\n// });\n// router.events.on('model:remove', () => console.log('remove event'));\n// router.events.on('model:add', thisObj.method, thisObj);\n\n// router.events.trigger('model:add', 1, 2, 'some test string', 5);\n// router.events.trigger('model:remove');\n// router.events.off('model:add', thisObj.method);\n\n// router.events.trigger('model:add', 'second test', 2, 'some test string', 5);\n// router.events.trigger('model:remove');\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app.js","import EventBus from './utils/eventbus.js';\n\nexport default class Router {\n\n  constructor(viewport, routes) {\n    this.viewport = viewport;\n    this.routes = routes;\n\n    this.events = new EventBus();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/router.js","/**\n * Class representing custom events implementation\n */\nexport default class EventBus {\n\n  /**\n   * Create event bus\n   */\n  constructor() {\n    this.events = Object.create(null);\n  }\n\n  /**\n   * Attach listenter for some event\n   * @param  {String} eventPath - The string containing two colon separated values\n   * @param  {Function} callback - Callback that will be called when event will be fired\n   * @param  {Object} [context] - Context that will be applied to callback\n   * @return {Object} this\n   */\n  on(eventPath, callback, context) {\n    const parsedPath = this.parseEventPath(eventPath);\n    const events = this.events;\n    const namespace = parsedPath.namespace;\n    const key = parsedPath.key;\n\n    const callbackObject = {\n      callback: callback,\n      context: context\n    };\n\n    let namespaceCallbacks;\n\n    if (!namespace) throw new Error('Event path don\\'t have namespace part');\n\n    if (!events[namespace]) {\n      events[namespace] = {\n        common: [],\n        keys: Object.create(null)\n      };\n    }\n\n    namespaceCallbacks = events[namespace];\n\n    if (key) {\n      if (namespaceCallbacks.keys[key]) {\n        namespaceCallbacks.keys[key].push(callbackObject);\n      } else {\n        namespaceCallbacks.keys[key] = [callbackObject];\n      }\n    } else {\n      namespaceCallbacks.common.push(callbackObject);\n    }\n\n    return this;\n  }\n\n  /**\n   * Detach listener for some event\n   * @param  {String} eventPath - The string containing two colon separated values\n   * @param  {Function} callback - Callback that will be deleted from event bus\n   * @return {Object} this\n   */\n  off(eventPath, callback) {\n    const parsedPath = this.parseEventPath(eventPath);\n    const events = this.events;\n    const namespace = parsedPath.namespace;\n    const key = parsedPath.key;\n\n    if (!namespace) throw new Error('Event path don\\'t have namespace part');\n\n    if (key) {\n      this.deleteCallback(events[namespace].keys[key], callback);\n    } else {\n      this.deleteCallback(events[namespace].common, callback);\n    }\n\n    return this;\n  }\n\n  /**\n   * Delete callback from callback object array\n   * @param  {Array} callbackArray - Callback object array\n   * @param  {Function} callback - Callback that will be deleted\n   */\n  deleteCallback(callbackArray, callback) {\n    let callbackIndex = -1;\n\n    callbackArray.forEach((callbackObject, index) => {\n      callbackIndex = callbackObject.callback === callback ?\n        index :\n        callbackIndex;\n    });\n\n    callbackIndex !== -1 && callbackArray.splice(callbackIndex, 1);\n  }\n\n  /**\n   * Fire namespace and key events\n   * @param  {String} eventPath - The string containing two colon separated values\n   * @param  {...Object} [data] - Data that will be passed in callbacks\n   * @return {Object} this\n   */\n  trigger(eventPath, ...data) {\n    const parsedEventPath = this.parseEventPath(eventPath);\n    let namespaceCallbacks;\n    let keyCallbacks;\n\n    if ((namespaceCallbacks = this.getNamespaceCallbacks(parsedEventPath.namespace)) &&\n        (keyCallbacks = this.getKeyCallbacks(namespaceCallbacks, parsedEventPath.key)).length\n    ) {\n      this.fireCallbacksArray(keyCallbacks, data);\n      this.fireCallbacksArray(namespaceCallbacks.common, data);\n    }\n\n    return this;\n  }\n\n  /**\n   * Fire each events from array\n   * @param  {Array} callbacksArray - Array with callbacks which will be fired\n   */\n  fireCallbacksArray(callbacksArray, data) {\n    callbacksArray.forEach((event) => {\n      const callback = event.callback;\n      const context = event.context;\n\n      setTimeout(callback.bind(context, ...data), 0);\n    });\n  }\n\n  /**\n   * Parse event path\n   * @param  {String} eventPath - The string containing two colon separated values\n   * @return {Object} parsedPath - Object that contains two properites namespace and key\n   * @return {String} parsedPath.namespace - Event namespace\n   * @return {String} parsedPath.key - Event specifactor\n   */\n  parseEventPath(eventPath) {\n    const splitPath = eventPath.trim().split(':');\n    return {\n      namespace: splitPath[0],\n      key: splitPath[1]\n    };\n  }\n\n  /**\n   * Return namespace object with callbacks\n   * @param {String} namespace - Event namespace\n   * @return {Null | Object} Null or namespaceCallbacks\n   */\n  getNamespaceCallbacks(namespace) {\n    let namespaceCallbacks = this.events[namespace];\n\n    return namespaceCallbacks ? namespaceCallbacks : null;\n  }\n\n  /**\n   * Return array of objects with callbacks for some key\n   * @param {Object} namespaceCallbacks - Namespace callbacks object\n   * @param {String} key - Event key\n   * @return {Null | Array} Null or keyCallbacks\n   */\n  getKeyCallbacks(namespaceCallbacks, key) {\n    const keyCallbacks = namespaceCallbacks.keys[key];\n\n    return keyCallbacks ? keyCallbacks : null;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/eventbus.js"],"sourceRoot":""}